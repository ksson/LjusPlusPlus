			

	        
	        
        	
function tickGlow() {
    canvas = document.createElement('canvas');

    // Check the element is in the DOM and the browser supports canvas
    if(canvas && canvas.getContext) {
        // Initaliase a 2-dimensional drawing context
        ctx = canvas.getContext('2d');
        width = 374;
        height = 428;
    	canvas.width = width;
    	canvas.height = height;

        bg = new Image();
        bg.onload = function() {
	        ctx.clearRect(0, 0, width, height);
        	ctx.drawImage(bg, 0, 0);

	        fg_right = new Image();
	        fg_center = new Image();
	        fg_left = new Image();

	        fg.onload = function() {
		        // create offscreen buffer, 
		        glowBuffer = document.createElement('canvas');
		        glowBuffer.width = width;
		        glowBuffer.height = height;
		        bx = glowBuffer.getContext('2d');
		        bx2 = glowBuffer.getContext('2d');

		        var d = range[1] - range[0];
		        var t = (updateIntervalMs*i)*0.001
		        var s = range[0] + d/2 + (d/2)*Math.sin(2*Math.PI*freq*t);
		        var s1 = range[0] + d/2 + (d/2)*Math.sin(2*Math.PI*freq*t+Math.PI*0.3);
		        var s2 = range[0] + d/2 + (d/2)*Math.sin(2*Math.PI*freq*t+Math.PI*0.5);
		        i = i+1;

		        bx.drawImage(fg, 0, 0);
		        bx2.drawImage(fg2, 0, 0);
		        
		        op = bx.getImageData(0, 0, width, height);
		        np = bx.getImageData(0, 0, width, height);
		        op2 = bx2.getImageData(0, 0, width, height);
		        np2 = bx2.getImageData(0, 0, width, height);

		        for(var I = 0, L = op.data.length; I < L; I += 4)
		        {
		            if(np.data[I + 3] > 0) // If it's not a transparent pixel
		            {
		                np.data[I] = baseColor[0] + colorMult[0]*s;
		                np.data[I + 1] = baseColor[1] + colorMult[1]*s1;
		                np.data[I + 2] = baseColor[2] + colorMult[2]*s2;
		            }
		        }

		        for(var I = 0, L = op2.data.length; I < L; I += 4)
		        {
		            if(np2.data[I + 3] > 0) // If it's not a transparent pixel
		            {
		                np2.data[I] = baseColor[0] + colorMult[0]*s;
		                np2.data[I + 1] = baseColor[1] + colorMult[1]*s1;
		                np2.data[I + 2] = baseColor[2] + colorMult[2]*s2;
		            }
		        }

		        ctx.putImageData(np, 0, 0);
		        ctx.putImageData(np2, 0, 0);

		        ctx.globalCompositeOperation = "destination-over";
        		ctx.drawImage(bg, 0, 0);

				document.getElementById("bench-right").style.backgroundImage = "url(" + canvas.toDataURL() + ")";

	    	}
        	fg.src = 'images/rightnositting.gif';
        	//fg2.src = 'images/shadows.gif';

	    }
	    bg.src = "images/bench.gif";
 	}
}